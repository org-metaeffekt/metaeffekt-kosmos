# These includes/excludes apply to unpacked analysis folder of an artifact in the analysis folder and specify the
# files included in the scanning process.
analyze.metascan.license.includes=**/*
analyze.metascan.license.excludes=\
  **/.DS_Store,**/._*,\
  **/.git/**/*,**/.git*,**/.git*,\
  **/.svn/**/*,\
  **/*.mp4,**/*.class,\
  **/*.so,**/*.so.*,**/*.a,\
  **/debug/core,**/Debug/core

# Segmentation filter includes/ignores. These includes specify which scan results contribute to the derived results.
# Licenses in filtered files are still reported as identified terms. Licenses in files that are ignored are not
# # reported.
analyze.scan.segmentation.ignore.includes=--none--
analyze.scan.segmentation.filter.includes=tests/acceptance

# enable scanning features
analyze.scan.pom.enabled=true
analyze.scan.license.enabled=true
analyze.scan.segmentation.enabled=true

# these scanning features require scancode; currently disabled
analyze.scan.scancode.enabled=false
analyze.scan.copyright.segmentation.enabled=false

# control overwrites; false means that scans are not overwritten and reused to boost performance of the scan
analyze.scan.license.overwrite=false
analyze.scan.scancode.overwrite=false
analyze.scan.segmentation.overwrite=false
analyze.scan.copyright.segmentation.overwrite=false

# forces that an html report is produced when true
analyze.metascan.report.force=false
analyze.metascan.report.enable=false

# manage sieve
analyze.sieve.enabled=false